{"version":3,"file":"static/js/719.80500d8f.chunk.js","mappings":"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","sources":["pages/Exercises/Exercises.styled.jsx","components/ExercisesSubcategoriesList/ExercisesSubcategoriesList.styled.jsx","components/ExercisesPagination/ExercisesPagination.styled.jsx","components/ExercisesPagination/ExercisesPagination.jsx","components/ExercisesSubcategoriesList/SubcategoryBodyPartList.jsx","components/ExercisesSubcategoriesList/SubcategoryMusclesList.jsx","components/ExercisesSubcategoriesList/SubcategoryEquipmentList.jsx","pages/Exercises/Exercises.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ExercisesWrapper = styled.li`\n  padding-left: 20px;\n  padding-right: 20px;\n\n  @media screen and (min-width: 1440px) {\n    width: 1248px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n\nexport const ExercisesContainer = styled.li`\n  @media screen and (min-width: 768px) {\n    display: flex;\n    justify-content: space-between;\n  }\n`;\n\nexport const ExercisesTitle = styled.h2`\n  color: #efede8;\n  font-size: 24px;\n  font-weight: 700;\n  line-height: 1.16;\n  margin-bottom: 20px;\n`;\n","import styled from '@emotion/styled';\n\nexport const ExercisesSublist = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n  }\n\n  @media screen and (min-width: 1440px) {\n    flex-wrap: wrap;\n    justify-content: start;\n    column-gap: 22px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nconst PaginationList = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding-bottom: 90px;\n  height: 100vh;\n\n  ul.pagination {\n    display: flex;\n    list-style: none;\n    padding: 0;\n    justify-content: center;\n    margin-top: 32px;\n  }\n\n  li.page-item {\n    margin: 0 4px;\n  }\n\n  button.page-link {\n    border: none;\n    background-color: #fff;\n    padding: 0;\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    cursor: pointer;\n    transition: background-color 0.2s ease;\n    font-size: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  button.page-link:not(.active) {\n    background-color: rgba(239, 237, 232, 0.1);\n  }\n\n  li.page-item.active button.page-link {\n    padding: 0;\n  }\n\n  li.page-item.active button.page-link svg {\n    width: 14px;\n    height: 14px;\n  }\n\n  @media screen and (min-width: 768px) {\n  }\n\n  @media screen and (min-width: 1440px) {\n    justify-content: baseline;\n    height: 100%;\n  }\n`;\n\nconst PaginationItem = styled.li`\n  margin-top: 32px;\n`;\n\nexport { PaginationList, PaginationItem };\n","import sprite from '../../images/sprite.svg';\nimport { PaginationItem } from './ExercisesPagination.styled';\n\nconst Pagination = ({\n  itemsPerPage,\n  totalItems,\n  currentPage,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(totalItems / itemsPerPage);\n\n  const handlePageChange = newPage => {\n    if (newPage >= 1 && newPage < totalPages) {\n      onPageChange(newPage);\n    }\n  };\n\n  const renderPageNumbers = () => {\n    const pageNumbers = [];\n\n    for (let i = 1; i <= totalPages; i++) {\n      pageNumbers.push(\n        <PaginationItem\n          key={i}\n          className={`page-item ${i === currentPage ? 'active' : ''}`}\n        >\n          <button className=\"page-link\" onClick={() => handlePageChange(i)}>\n            {i}\n            {i === currentPage && (\n              <svg>\n                <use href={`${sprite}#icon-bubble`} />\n              </svg>\n            )}\n          </button>\n        </PaginationItem>\n      );\n    }\n\n    return pageNumbers;\n  };\n\n  return (\n    <nav aria-label=\"Pagination\">\n      <ul className=\"pagination\">{renderPageNumbers()}</ul>\n    </nav>\n  );\n};\n\nexport default Pagination;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchBodyParts } from 'redux/exercises/operations';\nimport { selectBodyParts } from 'redux/exercises/selectors';\nimport { ExercisesSublist } from './ExercisesSubcategoriesList.styled';\nimport { SubCategoryExercisesItem } from 'components';\n\nimport Pagination from 'components/ExercisesPagination/ExercisesPagination';\nimport { PaginationList } from 'components/ExercisesPagination/ExercisesPagination.styled';\n\nexport const BodyPartList = ({ handleFilterClick, handleSetExerciseName }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchBodyParts());\n  }, [dispatch]);\n\n  const bodyParts = useSelector(selectBodyParts);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const defineItemsPerPage = () => {\n    const windowWidth = window.innerWidth;\n\n    if (windowWidth >= 768 && windowWidth <= 1439) {\n      return 9;\n    } else {\n      return 10;\n    }\n  };\n\n  const [itemsPerPage, setItemsPerPage] = useState(defineItemsPerPage);\n\n  const handleResize = () => {\n    setItemsPerPage(defineItemsPerPage());\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  });\n\n  const handlePageChange = newPage => {\n    setCurrentPage(newPage);\n  };\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = bodyParts.slice(indexOfFirstItem, indexOfLastItem);\n\n  return (\n    <PaginationList>\n      <ExercisesSublist>\n        {currentItems.map(item => (\n          <SubCategoryExercisesItem\n            key={item._id}\n            exercisesItem={item}\n            handleFilterClick={handleFilterClick}\n            handleSetExerciseName={handleSetExerciseName}\n          />\n        ))}\n      </ExercisesSublist>\n      {itemsPerPage < bodyParts.length && (\n        <Pagination\n          itemsPerPage={itemsPerPage}\n          totalItems={bodyParts.length}\n          currentPage={currentPage}\n          onPageChange={handlePageChange}\n        />\n      )}\n    </PaginationList>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchMuscles } from 'redux/exercises/operations';\nimport { selectMuscles } from 'redux/exercises/selectors';\nimport { ExercisesSublist } from './ExercisesSubcategoriesList.styled';\nimport { SubCategoryExercisesItem } from 'components';\n\nimport Pagination from 'components/ExercisesPagination/ExercisesPagination';\nimport { PaginationList } from 'components/ExercisesPagination/ExercisesPagination.styled';\n\nexport const MusclesList = ({ handleFilterClick, handleSetExerciseName }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchMuscles());\n  }, [dispatch]);\n\n  const muscles = useSelector(selectMuscles);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const defineItemsPerPage = () => {\n    const windowWidth = window.innerWidth;\n\n    if (windowWidth >= 768 && windowWidth <= 1439) {\n      return 9;\n    } else {\n      return 10;\n    }\n  };\n\n  const [itemsPerPage, setItemsPerPage] = useState(defineItemsPerPage);\n\n  const handleResize = () => {\n    setItemsPerPage(defineItemsPerPage());\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  });\n\n  const handlePageChange = newPage => {\n    setCurrentPage(newPage);\n  };\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = muscles.slice(indexOfFirstItem, indexOfLastItem);\n\n  return (\n    <PaginationList>\n      <ExercisesSublist>\n        {currentItems.map(item => (\n          <SubCategoryExercisesItem\n            key={item._id}\n            exercisesItem={item}\n            handleFilterClick={handleFilterClick}\n            handleSetExerciseName={handleSetExerciseName}\n          />\n        ))}\n      </ExercisesSublist>\n      {itemsPerPage < muscles.length && (\n        <Pagination\n          itemsPerPage={itemsPerPage}\n          totalItems={muscles.length}\n          currentPage={currentPage}\n          onPageChange={handlePageChange}\n        />\n      )}\n    </PaginationList>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchEquipment } from 'redux/exercises/operations';\nimport { selectEquipment } from 'redux/exercises/selectors';\nimport { ExercisesSublist } from './ExercisesSubcategoriesList.styled';\nimport { SubCategoryExercisesItem } from 'components';\n\nimport Pagination from 'components/ExercisesPagination/ExercisesPagination';\nimport { PaginationList } from 'components/ExercisesPagination/ExercisesPagination.styled';\n\nexport const EquipmentList = ({ handleFilterClick, handleSetExerciseName }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchEquipment());\n  }, [dispatch]);\n\n  const equipment = useSelector(selectEquipment);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const defineItemsPerPage = () => {\n    const windowWidth = window.innerWidth;\n\n    if (windowWidth >= 768 && windowWidth <= 1439) {\n      return 9;\n    } else {\n      return 10;\n    }\n  };\n\n  const [itemsPerPage, setItemsPerPage] = useState(defineItemsPerPage);\n\n  const handleResize = () => {\n    setItemsPerPage(defineItemsPerPage());\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  });\n\n  const handlePageChange = newPage => {\n    setCurrentPage(newPage);\n  };\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = equipment.slice(indexOfFirstItem, indexOfLastItem);\n\n  return (\n    <PaginationList>\n      <ExercisesSublist>\n        {currentItems.map(item => (\n          <SubCategoryExercisesItem\n            key={item._id}\n            exercisesItem={item}\n            handleFilterClick={handleFilterClick}\n            handleSetExerciseName={handleSetExerciseName}\n          />\n        ))}\n      </ExercisesSublist>\n      {itemsPerPage < equipment.length && (\n        <Pagination\n          itemsPerPage={itemsPerPage}\n          totalItems={equipment.length}\n          currentPage={currentPage}\n          onPageChange={handlePageChange}\n        />\n      )}\n    </PaginationList>\n  );\n};\n","import { useState } from 'react';\nimport {\n  ExercisesWrapper,\n  ExercisesContainer,\n  ExercisesTitle,\n} from './Exercises.styled';\nimport { BodyPartList } from 'components/ExercisesSubcategoriesList/SubcategoryBodyPartList';\nimport { MusclesList } from 'components/ExercisesSubcategoriesList/SubcategoryMusclesList';\nimport { EquipmentList } from 'components/ExercisesSubcategoriesList/SubcategoryEquipmentList';\nimport { ExercisesNavigation } from 'components';\nimport { ExercisesList } from 'components';\n\nexport default function Exercises() {\n  const [activeFilter, setActiveFilter] = useState('Body parts');\n  const [exerciseName, setExerciseName] = useState('');\n\n  const handleSetExerciseName = name => {\n    setExerciseName(name);\n  };\n\n  const handleFilterClick = filter => {\n    setActiveFilter(filter);\n  };\n\n  const capitalizeFirstLeter = string => {\n    const newString = string.slice(0, 1).toUpperCase() + string.slice(1);\n    return newString;\n  };\n\n  return (\n    <ExercisesWrapper>\n      <ExercisesContainer>\n        {activeFilter !== 'Waist' ? (\n          <ExercisesTitle>Exercises</ExercisesTitle>\n        ) : (\n          <ExercisesTitle>{capitalizeFirstLeter(exerciseName)}</ExercisesTitle>\n        )}\n        <ExercisesNavigation\n          activeFilter={activeFilter}\n          handleFilterClick={handleFilterClick}\n        />\n      </ExercisesContainer>\n      {activeFilter === 'Body parts' && (\n        <BodyPartList\n          handleFilterClick={handleFilterClick}\n          handleSetExerciseName={handleSetExerciseName}\n        />\n      )}\n      {activeFilter === 'Muscules' && (\n        <MusclesList\n          handleFilterClick={handleFilterClick}\n          handleSetExerciseName={handleSetExerciseName}\n        />\n      )}\n      {activeFilter === 'Equipment' && (\n        <EquipmentList\n          handleFilterClick={handleFilterClick}\n          handleSetExerciseName={handleSetExerciseName}\n        />\n      )}\n      {activeFilter === 'Waist' && (\n        <ExercisesList exerciseName={exerciseName} />\n      )}\n    </ExercisesWrapper>\n  );\n}\n"],"names":["ExercisesWrapper","styled","_templateObject","_taggedTemplateLiteral","ExercisesContainer","_templateObject2","ExercisesTitle","_templateObject3","ExercisesSublist","PaginationList","PaginationItem","_ref","itemsPerPage","totalItems","currentPage","onPageChange","totalPages","Math","ceil","_jsx","children","className","pageNumbers","_loop","i","push","concat","_jsxs","onClick","newPage","href","sprite","renderPageNumbers","BodyPartList","handleFilterClick","handleSetExerciseName","dispatch","useDispatch","useEffect","fetchBodyParts","bodyParts","useSelector","selectBodyParts","_useState","useState","_useState2","_slicedToArray","setCurrentPage","defineItemsPerPage","windowWidth","window","innerWidth","_useState3","_useState4","setItemsPerPage","handleResize","addEventListener","removeEventListener","indexOfLastItem","indexOfFirstItem","currentItems","slice","map","item","SubCategoryExercisesItem","exercisesItem","_id","length","Pagination","MusclesList","fetchMuscles","muscles","selectMuscles","EquipmentList","fetchEquipment","equipment","selectEquipment","Exercises","string","activeFilter","setActiveFilter","exerciseName","setExerciseName","name","filter","toUpperCase","ExercisesNavigation","ExercisesList"],"sourceRoot":""}